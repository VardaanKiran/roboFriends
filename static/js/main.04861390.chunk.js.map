{"version":3,"sources":["reportWebVitals.js","components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Card","name","email","id","className","alt","src","CardList","robots","map","user","i","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchField","target","value","fetch","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","length","ReactDOM","render","document","getElementById"],"mappings":"8LAYeA,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,Q,4BCOCQ,EAZF,SAAC,GAAuB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,MAAOC,EAAQ,EAARA,GAC3B,OACC,sBAAKC,UAAY,mDAAjB,UACC,qBAAKC,IAAM,SAASC,IAAG,+BAA4BH,EAA5B,mBACtB,gCACC,6BAAKF,IACL,4BAAIC,WCQMK,EAbE,SAAC,GAAe,IAAbC,EAAY,EAAZA,OACnB,OACC,8BACEA,EAAOC,KAAI,SAACC,EAAMC,GACnB,OAAO,cAAC,EAAD,CACPV,KAAQS,EAAKT,KACbC,MAASQ,EAAKR,MACdC,GAAMO,EAAKP,IAHSQ,SCORC,EAZG,SAAC,GAAmB,IAAlBC,EAAiB,EAAjBA,aACnB,OACC,qBAAKT,UAAY,MAAjB,SACA,uBACCA,UAAY,mCACZU,KAAO,SACPC,YAAc,gBACdC,SAAYH,OCCAI,EARA,SAACC,GACf,OACC,qBAAKC,MAAS,CAACC,UAAU,SAASC,OAAO,kBAAmBC,OAAO,SAAnE,SACEJ,EAAMK,YCkBKC,E,kDAnBd,WAAYN,GAAO,IAAD,8BACjB,cAAMA,IACDO,MAAQ,CACZC,UAAU,GAHM,E,8DAOAC,EAAOC,GACxBC,KAAKC,SAAS,CAACJ,UAAS,M,+BAGxB,OAAGG,KAAKJ,MAAMC,SACN,yDAGAG,KAAKX,MAAMK,a,GAjBOQ,aC+CbC,G,wDAxCd,aAAc,IAAD,8BACZ,gBAODC,eAAiB,SAACC,GACjB,EAAKJ,SAAS,CAACK,YAAYD,EAAME,OAAOC,SAPxC,EAAKZ,MAAQ,CACZjB,OAAS,GACT2B,YAAa,IAJF,E,gEAYO,IAAD,OAClBG,MAAM,8CACL5C,MAAK,SAAA6C,GAAQ,OAAIA,EAASC,UAC1B9C,MAAK,SAAA+C,GAAK,OAAI,EAAKX,SAAS,CAACtB,OAAOiC,S,+BAG7B,IAAD,OACDC,EAAiBb,KAAKJ,MAAMjB,OAAOmC,QAAO,SAAAC,GAC/C,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS,EAAKrB,MAAMU,YAAYU,kBAEjE,OAA8B,IAA3BhB,KAAKJ,MAAMjB,OAAOuC,OACb,yCAIN,sBAAK3C,UAAY,KAAjB,UACC,oBAAIA,UAAY,KAAhB,yBACA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACC,cAAC,EAAD,UACC,cAAC,EAAD,CAAUzB,OAAQkC,e,GAlCPX,c,MCAlBiB,IAASC,OACR,cAAC,EAAD,IACCC,SAASC,eAAe,SAK1B5D,M","file":"static/js/main.04861390.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\n\r\nconst Card = ({name, email, id}) => {\r\n\treturn(\r\n\t\t<div className = 'bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n\t\t\t<img alt = 'robots' src = {`https://robohash.org/${id}?size=200x200`} />\r\n\t\t\t\t<div>\r\n\t\t\t\t\t<h2>{name}</h2>\r\n\t\t\t\t\t<p>{email}</p>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots }) =>{\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t{robots.map((user, i) =>{\r\n\t\t\treturn <Card key = {i}\r\n\t\t\tname = {user.name} \r\n\t\t\temail = {user.email} \r\n\t\t\tid = {user.id}/>\r\n\t\t})} \r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({searchChange}) =>{\r\n\treturn(\r\n\t\t<div className = 'pa2'>\r\n\t\t<input \r\n\t\t\tclassName = 'pa3 ba b--green bg-lightest-blue'\r\n\t\t\ttype = 'search' \r\n\t\t\tplaceholder = 'search robots'\r\n\t\t\tonChange = {searchChange}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t\t);\r\n}\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n\treturn (\r\n\t\t<div style = {{overflowY:'scroll',border:'1px solid black', height:'500px'}}>\r\n\t\t\t{props.children}\r\n\t\t</div>\r\n\t\t);\r\n}\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\n\r\nclass ErrorBoundary extends Component{\r\n\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\thasError: false\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentDidCatch(error, info){\r\n\t\tthis.setState({hasError:true});\r\n\t}\r\n\trender(){\r\n\t\tif(this.state.hasError){\r\n\t\t\treturn <h1>Ooops, That is not Good</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn this.props.children\r\n\t\t}\r\n\t}\r\n}\r\nexport default ErrorBoundary;","import React, {Component} from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll';\r\nimport ErrorBoundary from '../components/ErrorBoundary'\r\nimport './App.css'\r\n\r\nclass App extends Component{\r\n\r\n\tconstructor(){\r\n\t\tsuper();\r\n\t\tthis.state = {\r\n\t\t\trobots : [],\r\n\t\t\tsearchField: ''\r\n\t\t}\r\n\t}\r\n\r\n\tonSearchChange = (event) => {\r\n\t\tthis.setState({searchField:event.target.value})\r\n\t}\r\n\r\n\tcomponentDidMount(){\r\n\t\tfetch('https://jsonplaceholder.typicode.com/users')\r\n\t\t.then(response => response.json())\r\n\t\t.then(users => this.setState({robots:users}));\r\n\t}\r\n\r\n\trender(){\r\n\t\tconst filteredRobots = this.state.robots.filter(robot => {\r\n\t\t\treturn robot.name.toLowerCase().includes(this.state.searchField.toLowerCase());\r\n\t\t})\r\n\t\tif(this.state.robots.length===0){\r\n\t\t\treturn <h1>Loading</h1>\r\n\t\t}\r\n\t\telse{\r\n\t\t\treturn (\r\n\t\t\t\t<div className = 'tc'>\r\n\t\t\t\t\t<h1 className = 'f1'>RoboFriends</h1>\r\n\t\t\t\t\t<SearchBox searchChange={this.onSearchChange}/>\r\n\t\t\t\t\t<Scroll>\r\n\t\t\t\t\t\t<ErrorBoundary>\r\n\t\t\t\t\t\t\t<CardList robots={filteredRobots}/>\r\n\t\t\t\t\t\t</ErrorBoundary>\r\n\t\t\t\t\t</Scroll>\r\n\t\t\t\t</div>\r\n\t\t\t\t);\r\n\t\t}\r\n\t}\r\n}\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport App from './containers/App';\nimport 'tachyons';\n\nReactDOM.render(\n\t<App />\n\t,document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}